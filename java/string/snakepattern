class snakepattern {
    public static void main(String args[]){
       int mat[][] = { {10, 20, 30, 40},
                   {15, 25, 35, 45},
                    {27, 29, 37, 48},
                    {32, 33, 39, 50}};
       //10 20 30 40 45 35 25 15 27 29 37 48 50 39 33 32    
       
       //10 20 30 40
       //15 25 32 45
       //27 29 37 48
       //32 33 39 50
       int c=0;
       
       //System.out.println(mat[0].length);
       for(int i=0;i<mat.length;i++){
             c++;
             
           for(int j=0;j<mat[i].length;j++){
                 if(c%2==0){
                     int k1=mat[i].length-j-1;
                     System.out.print(mat[i][k1]+" ");
                 }
                 else{
                     
                     System.out.print(mat[i][j]+" ");
                 }
               
           }
       }
        
        
    }
}


//opti way-->


// class Main {
//     public static void main(String args[]){
//         int mat[][] = { 
//             {10, 20, 30, 40},
//             {15, 25, 35, 45},
//             {27, 29, 37, 48},
//             {32, 33, 39, 50}
//         };

//         for(int i = 0; i < mat.length; i++){
//             int start, end, step;

//             // decide direction just once per row
//             if(i % 2 == 0){     // even row → left to right
//                 start = 0;
//                 end = mat[i].length;
//                 step = 1;
//             } else {            // odd row → right to left
//                 start = mat[i].length - 1;
//                 end = -1;
//                 step = -1;
//             }

//             // single loop for traversal
//             for(int j = start; j != end; j += step){
//                 System.out.print(mat[i][j] + " ");
//             }
//         }
//     }
// }
